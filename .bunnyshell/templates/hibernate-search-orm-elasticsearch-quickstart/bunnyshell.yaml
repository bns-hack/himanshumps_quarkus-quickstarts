kind: Environment
name: Quarkus hibernate-search-orm-elasticsearch-quickstart Application (development profile)
type: ephemeral
environmentVariables:
  POSTGRES_PASSWORD: bns_secret(qHogxn5e)
  POSTGRES_USERNAME: bns_secret(postgres)
components:
  -
    kind: Database
    name: elasticsearch
    dockerCompose:
      environment:
        discovery.type: single-node
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.0
      ports:
        - '9200:9200'
  -
    kind: Database
    name: postgres-db
    dockerCompose:
      environment:
        POSTGRES_DB: quarkus_test
        POSTGRES_PASSWORD: '{{ env.vars.POSTGRES_PASSWORD }}'
        POSTGRES_USER: '{{ env.vars.POSTGRES_USERNAME }}'
      image: postgres:15.3-alpine3.18
      ports:
        - '5432:5432'
    volumes:
      -
        name: postgres-volume
        mount: /var/lib/postgresql/data
        subPath: ''
  -
    kind: Application
    name: hibernate-orm-elasticsearch-qs-application
    gitRepo: 'https://github.com/himanshumps/quarkus-quickstarts.git'
    gitBranch: bunnyshell
    gitApplicationPath: hibernate-search-orm-elasticsearch-quickstart
    dockerCompose:
      build:
        context: ./hibernate-search-orm-elasticsearch-quickstart
        dockerfile: src/main/docker/Dockerfile.bunnyshell.dev
        target: dev
      environment:
        POSTGRES_HOST: postgres-db
        ELASTICSEARCH_HOST: elasticsearch
        POSTGRES_PASSWORD: '{{ env.vars.POSTGRES_PASSWORD }}'
        POSTGRES_USER: '{{ env.vars.POSTGRES_USERNAME }}'
        QUARKUS_PROFILE: prod
      ports:
        - '8080:8080'
    hosts:
      -
        hostname: 'orm-es-{{ env.base_domain }}'
        path: /
        servicePort: 8080
volumes:
  -
    name: postgres-volume
    size: 128Mi
    type: disk